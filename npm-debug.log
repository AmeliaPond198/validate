0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.10.10
3 info using node@v6.10.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/cferdinandi/Sites/validate',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/cferdinandi/.npm/validate/1.0.5/package.tgz not in flight; packing
9 verbose correctMkdir /Users/cferdinandi/.npm correctMkdir not in flight; initializing
10 info lifecycle validate@1.0.5~prepublish: validate@1.0.5
11 silly lifecycle validate@1.0.5~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/cferdinandi/.npm/validate/1.0.5/package.tgz',
12 verbose tar pack   '/Users/cferdinandi/Sites/validate' ]
13 verbose tarball /Users/cferdinandi/.npm/validate/1.0.5/package.tgz
14 verbose folder /Users/cferdinandi/Sites/validate
15 verbose addLocalTarball adding from inside cache /Users/cferdinandi/.npm/validate/1.0.5/package.tgz
16 verbose correctMkdir /Users/cferdinandi/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd validate@1.0.5
18 verbose afterAdd /Users/cferdinandi/.npm/validate/1.0.5/package/package.json not in flight; writing
19 verbose correctMkdir /Users/cferdinandi/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/cferdinandi/.npm/validate/1.0.5/package/package.json written
21 silly publish { name: 'validate',
21 silly publish   version: '1.0.5',
21 silly publish   description: 'A lightweight form validation script that augments native HTML5 form validation elements and attributes.',
21 silly publish   main: './dist/js/validate.js',
21 silly publish   author: { name: 'Chris Ferdinandi', url: 'http://gomakethings.com' },
21 silly publish   license: 'MIT',
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+ssh://git@github.com/cferdinandi/validate.git' },
21 silly publish   devDependencies:
21 silly publish    { gulp: '^3.9.1',
21 silly publish      'node-fs': '^0.1.7',
21 silly publish      del: '^2.2.2',
21 silly publish      lazypipe: '^1.0.1',
21 silly publish      'gulp-plumber': '^1.1.0',
21 silly publish      'gulp-flatten': '^0.3.1',
21 silly publish      'gulp-tap': '^0.1.3',
21 silly publish      'gulp-rename': '^1.2.2',
21 silly publish      'gulp-header': '^1.8.8',
21 silly publish      'gulp-footer': '^1.0.5',
21 silly publish      'gulp-watch': '^4.3.11',
21 silly publish      'gulp-livereload': '^3.8.1',
21 silly publish      jshint: '^2.9.4',
21 silly publish      'gulp-jshint': '^2.0.4',
21 silly publish      'jshint-stylish': '^2.2.1',
21 silly publish      'gulp-concat': '^2.6.1',
21 silly publish      'gulp-uglify': '^2.1.2',
21 silly publish      'gulp-optimize-js': '^1.1.0',
21 silly publish      'gulp-markdown': '^1.2.0',
21 silly publish      'gulp-file-include': '^0.14.0' },
21 silly publish   readme: '# Validate.js [![Build Status](https://travis-ci.org/cferdinandi/validate.svg)](https://travis-ci.org/cferdinandi/validate)\nA lightweight form validation script that augments native HTML5 form validation elements and attributes, providing a better user experience and giving you more control.\n\nWhen a visitor leaves a field, Validate.js immediately validates the field and displays an error if applicable. It also validates the entire form on submit, and provides support for custom `onSubmit()` functions (for example, Ajax form submission).\n\n[Download Validate](https://github.com/cferdinandi/validate/archive/master.zip) / [View the demo](http://cferdinandi.github.io/validate/)\n\n\n<hr>\n\n### Want to learn how to write your own vanilla JS plugins? Get my free [daily developer tips](https://gomakethings.com/newsletter/) and level-up as a web developer. ðŸš€\n\n<hr>\n\n\n\n## Getting Started\n\nCompiled and production-ready code can be found in the `dist` directory. The `src` directory contains development code.\n\n### 1. Include Validate.js on your site.\n\n```html\n<script src="dist/js/validate.js"></script>\n```\n\n### 2. Use HTML5 semantic input types and validation-related attributes on your form fields.\n\nAdd the `required` attribute to required fields. Use `type="email"` and `type="url"` for email addresses and URLs, respectively. Include `pattern` attributes, `min` and `max`, and so on to set validation criteria for your form fields. View a [full list of types and attributes on MDN](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation#Intrinsic_and_basic_constraints).\n\n```html\n<div>\n\t<label for="email">Email</label>\n\t<input type="email" id="email" required>\n</div>\n\n<div>\n\t<label for="url">URL</label>\n\t<input type="url" id="url" required>\n</div>\n```\n\nIf you\'re using validation patterns, you can also include a `title` with a custom validation message. This will display in the error message.\n\n```html\n<div>\n\t<label for="password">Password (At least 1 uppercase character, 1 lowercase character, and 1 number)</label>\n\t<input type="password" id="password" value="" title="Please choose a password that includes at least 1 uppercase character, 1 lowercase character, and 1 number." pattern="^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$" required>\n</div>\n```\n\n### 3. Flag your form for validation.\n\nAdd the `[data-validate]` attribute to any forms you want validated.\n\n```html\n<form data-validate>\n\t...\n</form>\n```\n\n### 4. Initialize Validate.js.\n\nIn the footer of your page, after the content, initialize Validate.js. And that\'s it, you\'re done. Nice work!\n\n```html\n<script>\n\tvalidate.init();\n</script>\n```\n\n\n\n## Styling Errors\n\nValidate.js does not come pre-packaged with any styles for fields with errors or error messages. Use the `.error` class to style fields, and the `.error-message` class to style error messages.\n\nNeed a starting point? Here\'s some really lightweight CSS you can use.\n\n```css\n/**\n * Form Validation Errors\n */\n.error {\n\tborder-color: red;\n}\n\n.error-message {\n\tcolor: red;\n\tfont-style: italic;\n\tmargin-bottom: 1em;\n}\n```\n\n\n\n## Installing with Package Managers\n\nYou can install Validate.js with your favorite package manager directly from GitHub (it\'s not available on NPM).\n\n* **[NPM](https://www.npmjs.org/):** `npm install cferdinandi/validate`\n* **[Bower](http://bower.io/):** `bower install https://github.com/cferdinandi/validate.git`\n\n\n\n## Working with the Source Files\n\nIf you would prefer, you can work with the development code in the `src` directory using the included [Gulp build system](http://gulpjs.com/). This compiles, lints, and minifies code.\n\n### Dependencies\nMake sure these are installed first.\n\n* [Node.js](http://nodejs.org)\n* [Gulp](http://gulpjs.com) `sudo npm install -g gulp`\n\n### Quick Start\n\n1. In bash/terminal/command line, `cd` into your project directory.\n2. Run `npm install` to install required files.\n3. When it\'s done installing, run one of the task runners to get going:\n\t* `gulp` manually compiles files.\n\t* `gulp watch` automatically compiles files when changes are made and applies changes using [LiveReload](http://livereload.com/).\n\n\n\n## Options and Settings\n\nValidate.js includes smart defaults and works right out of the box. But if you want to customize things, it also has a robust API that provides multiple ways for you to adjust the default options and settings.\n\n### Global Settings\n\nYou can pass options and callbacks into Validate through the `init()` function:\n\n```javascript\nvalidate.init({\n\n\t// Classes and Selectors\n\tselector: \'[data-validate]\', // The selector for forms to validate\n\tfieldClass: \'error\', // The class to apply to fields with errors\n\terrorClass: \'error-message\', // The class to apply to error messages\n\n\t// Messages\n\tmessageValueMissing: \'Please fill out this field.\', // Displayed when a required field is left empty\n\tmessageTypeMismatchEmail: \'Please enter an email address.\', // Displayed when a `type="email"` field isn\'t a valid email\n\tmessageTypeMismatchURL: \'Please enter a URL.\', // Displayed when a `type="url"` field isn\'t a valid URL\n\tmessageTooShort: \'Please lengthen this text to {minLength} characters or more. You are currently using {length} characters.\', // Displayed with the `minLength` attribute is used and the input value is too short\n\tmessageTooLong: \'Please shorten this text to no more than {maxLength} characters. You are currently using {length} characters.\', // Displayed with the `maxLength` attribute is used and the input value is too long\n\tmessagePatternMismatch: \'Please match the requested format.\', // Displayed with the `pattern` attribute is used and the pattern doesn\'t match (if a `title` attribute is used, that\'s displayed instead)\n\tmessageBadInput: \'Please enter a number.\', // Displayed when the field is numeric (ex. `type="number"`) but the value is not a number\n\tmessageStepMismatch: \'Please select a valid value.\', // Displayed when the `step` attribute is used and the value doesn\'t adhere to it\n\tmessageRangeOverflow: \'Please select a value that is no more than {max}.\', // Displayed with the `max` attribute is used and the input value is too hight\n\tmessageRangeUnderflow: \'Please select a value that is no less than {min}.\', // Displayed with the `mind` attribute is used and the input value is too low\n\tmessageGeneric: \'The value you entered for this field is invalid.\', // A catchall error, displayed when the field fails validation and none of the other conditions apply\n\n\t// Form Submission\n\tdisableSubmit: false, // If true, don\'t submit the form to the server (for Ajax for submission)\n\tonSubmit: function (form, fields) {}, // Function to run if the form successfully validates\n\n\t// Callbacks\n\tbeforeShowError: function (field, error) {}, // Function to run before an error is display\n\tafterShowError: function (field, error) {}, // Function to run after an error is display\n\tbeforeRemoveError: function (field) {}, // Function to run before an error is removed\n\tafterRemoveError: function (field) {}, // Function to run after an error is removed\n\n});\n```\n\n### Use Validate.js events in your own scripts\n\nYou can also call Validate.js\'s public methods in your own scripts.\n\n#### hasError()\nCheck if a field has a validation error.\n\n```javascript\nvalidate.hasError(\n\tfield, // The field to validate\n\toptions // User settings, same as the ones passed in during validate.init() [optional]\n);\n```\n\n**Example**\n\n```javascript\nvar field = document.querySelector(\'[name="email"]\');\nvar error = validate.hasError(field);\n\nif (error) {\n\t// Do something...\n}\n```\n\n#### showError()\nShow an error message on a field.\n\n```javascript\nvalidate.showError(\n\tfield, // The field to show an error message for\n\terror, // The error message to show\n\toptions // User settings, same as the ones passed in during validate.init() [optional]\n);\n```\n\n**Example 1: Write your own error**\n\n```javascript\nvar field = document.querySelector(\'[name="email"]\');\nvar error = \'This field is wrong, dude!\';\nvalidate.showError(field, error);\n```\n\n**Example 2: Using `hasError()`**\n\n```javascript\nvar field = document.querySelector(\'[name="url"]\');\nvar error = validate.hasError(field);\nvalidate.showError(field, error);\n```\n\n#### removeError()\nRemove the error message from a field.\n\n```javascript\n/**\n * Remove an error message from a field\n * @public\n * @param  {Node}   field   The field to remove the error from\n * @param  {Object} options User options\n */\nvalidate.removeError(\n\tfield, // The field to remove the error from\n\toptions // User settings, same as the ones passed in during validate.init() [optional]\n);\n```\n\n**Example**\n\n```javascript\nvar field = document.querySelector(\'[name="email"]\');\nvalidate.removeError(field);\n```\n\n#### destroy()\nDestroy the current `validate.init()`. Removes all errors and resets the DOM. This is called automatically during the `init` function to remove any existing initializations.\n\n```javascript\nvalidate.destroy();\n```\n\n\n## Browser Compatibility\n\nValidate.js works in all modern browsers, and (mostly) IE 10 and above.\n\nUnfortunately, not all validation types are supported by all versions of IE and Edge consistently. For example, IE10 and IE11 will check if a form input is too long (using the `maxLength` attribute), but Edge will not. And no version of IE or Edge will check if it\'s too short (using the `minLength` attribute).\n\n### A Polyfill\n\nValidate.js includes an optional polyfill (`validityState-polyfill.js`) that you can include to push support back to IE10, and add missing features to partially supported browsers.\n\nIf you also include [Eli Grey\'s classList.js polyfill](https://github.com/eligrey/classList.js/), you can push support even further, back to IE9.\n\n\n\n## How to Contribute\n\nPlease review the [contributing guidelines](CONTRIBUTING.md).\n\n\n\n## License\n\nThe code is available under the [MIT License](LICENSE.md).',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '9491b7bce54e74f9306a8b8bea753d4898640a6f',
21 silly publish   bugs: { url: 'https://github.com/cferdinandi/validate/issues' },
21 silly publish   homepage: 'https://github.com/cferdinandi/validate#readme',
21 silly publish   _id: 'validate@1.0.5',
21 silly publish   scripts: {},
21 silly publish   _shasum: '9a20126fed1e194c2f6a7ba81a9bdc98a5b5252e',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name validate
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'validate',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'validate',
26 silly mapToRegistry   name: 'validate',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/validate
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/cferdinandi/.npm/validate/1.0.5/package.tgz
30 verbose request uri https://registry.npmjs.org/validate
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 2:53:04 PM
33 verbose request using bearer token for auth
34 verbose request id 7003d7a190115549
35 http request PUT https://registry.npmjs.org/validate
36 http 403 https://registry.npmjs.org/validate
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '102',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Thu, 07 Sep 2017 18:53:05 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-ewr18141-EWR',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1504810385.813169,VS0,VE435',
37 verbose headers   vary: 'Accept-Encoding, Accept' }
38 verbose request invalidating /Users/cferdinandi/.npm/registry.npmjs.org/validate on PUT
39 error publish Failed PUT 403
40 verbose stack Error: You do not have permission to publish "validate". Are you logged in as the correct user? : validate
40 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
40 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
40 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1048:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:969:12)
41 verbose statusCode 403
42 verbose pkgid validate
43 verbose cwd /Users/cferdinandi/Sites/validate
44 error Darwin 16.7.0
45 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
46 error node v6.10.2
47 error npm  v3.10.10
48 error code E403
49 error You do not have permission to publish "validate". Are you logged in as the correct user? : validate
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
